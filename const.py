import pygame as p
WIDTH=HEIGHT=800
DIMENSION = 8
SQ_SIZE = HEIGHT // DIMENSION
MAX_FPS = 15
p.init()
p.mixer.init()
COLORS = {
    'lightBg':(235, 209, 166), 'darkBg':(165, 117, 80),
    'lightTrace': (245, 234, 100), 'darkTrace': (209, 185, 59),
    'moves':(159, 217, 23)
}
global endSound
endSound = True
moveSound = p.mixer.Sound('sounds/move.ogg')
captureSound = p.mixer.Sound('sounds/capture.ogg')
drawSound = p.mixer.Sound('sounds/draw.ogg')
winSound = p.mixer.Sound('sounds/win.ogg')
font = p.font.SysFont('monospace', 18, bold=True)
IMAGES = {}
def loadImages():
    pieces = ['wp','wR','wN','wB','wK','wQ','bp','bR','bN','bB','bK','bQ']
    for piece in pieces:
        IMAGES[piece] = p.transform.scale(p.image.load("images/"+piece+".png"),(SQ_SIZE*0.8,SQ_SIZE*0.8))

# Brain Consts

    
CHECKMATE = 1000
STALEMATE = 0
DEPTH=3

pieceScore = {'p': 1, 'N': 3, 'B': 3, 'R': 5, 'Q': 9, 'K': 0}

nScore = [[0.0, 0.1, 0.2, 0.2, 0.2, 0.2, 0.1, 0.0],
            [0.1, 0.3, 0.5, 0.5, 0.5, 0.5, 0.3, 0.1],
            [0.2, 0.5, 0.6, 0.65, 0.65, 0.6, 0.5, 0.2],
            [0.2, 0.55, 0.65, 0.7, 0.7, 0.65, 0.55, 0.2],
            [0.2, 0.5, 0.65, 0.7, 0.7, 0.65, 0.5, 0.2],
            [0.2, 0.55, 0.6, 0.65, 0.65, 0.6, 0.55, 0.2],
            [0.1, 0.3, 0.5, 0.55, 0.55, 0.5, 0.3, 0.1],
            [0.0, 0.1, 0.2, 0.2, 0.2, 0.2, 0.1, 0.0]]

bScore = [[0.0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.0],
                 [0.2, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.2],
                 [0.2, 0.4, 0.5, 0.6, 0.6, 0.5, 0.4, 0.2],
                 [0.2, 0.5, 0.5, 0.6, 0.6, 0.5, 0.5, 0.2],
                 [0.2, 0.4, 0.6, 0.6, 0.6, 0.6, 0.4, 0.2],
                 [0.2, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.2],
                 [0.2, 0.5, 0.4, 0.4, 0.4, 0.4, 0.5, 0.2],
                 [0.0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.0]]

rScore = [[0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25],
               [0.5, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.5],
               [0.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.0],
               [0.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.0],
               [0.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.0],
               [0.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.0],
               [0.0, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.0],
               [0.25, 0.25, 0.25, 0.5, 0.5, 0.25, 0.25, 0.25]]

qScore = [[0.0, 0.2, 0.2, 0.3, 0.3, 0.2, 0.2, 0.0],
                [0.2, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.2],
                [0.2, 0.4, 0.5, 0.5, 0.5, 0.5, 0.4, 0.2],
                [0.3, 0.4, 0.5, 0.5, 0.5, 0.5, 0.4, 0.3],
                [0.4, 0.4, 0.5, 0.5, 0.5, 0.5, 0.4, 0.3],
                [0.2, 0.5, 0.5, 0.5, 0.5, 0.5, 0.4, 0.2],
                [0.2, 0.4, 0.5, 0.4, 0.4, 0.4, 0.4, 0.2],
                [0.0, 0.2, 0.2, 0.3, 0.3, 0.2, 0.2, 0.0]]

qScore =       [[0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8],
               [0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7],
               [0.3, 0.3, 0.4, 0.5, 0.5, 0.4, 0.3, 0.3],
               [0.25, 0.25, 0.3, 0.45, 0.45, 0.3, 0.25, 0.25],
               [0.2, 0.2, 0.2, 0.4, 0.4, 0.2, 0.2, 0.2],
               [0.25, 0.15, 0.1, 0.2, 0.2, 0.1, 0.15, 0.25],
               [0.25, 0.3, 0.3, 0.0, 0.0, 0.3, 0.3, 0.25],
               [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2]]

pScore = [[0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8],
               [0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7],
               [0.3, 0.3, 0.4, 0.5, 0.5, 0.4, 0.3, 0.3],
               [0.25, 0.25, 0.3, 0.45, 0.45, 0.3, 0.25, 0.25],
               [0.2, 0.2, 0.2, 0.4, 0.4, 0.2, 0.2, 0.2],
               [0.25, 0.15, 0.1, 0.2, 0.2, 0.1, 0.15, 0.25],
               [0.25, 0.3, 0.3, 0.0, 0.0, 0.3, 0.3, 0.25],
               [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2]]


piecePositionScores = {"wN": nScore,
                    "bN": nScore[::-1],
                    "wB": bScore,
                    "bB": bScore[::-1],
                    "wQ": qScore,
                    "bQ": qScore[::-1],
                    "wR": rScore,
                    "bR": rScore[::-1],
                    "wp": pScore,
                    "bp": pScore[::-1]
                }